{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","stockData","optionsData","handleOnDrop","data","splice","remove","map","d","description","replace","cost","split","slice","amount","length","find","r","push","Date","Type","Shares","Description","Cost","Amount","setState","handleOnError","err","file","inputElem","reason","console","log","handleOnRemoveFile","this","className","onDrop","onError","addRemoveButton","removeButtonColor","onRemoveFile","filename","type","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAKqBA,E,4MACnBC,MAAQ,CACNC,UAAW,GACXC,YAAa,I,EAGfC,aAAe,SAACC,GACd,IAAMF,EAAc,GACdD,EAAY,GAClBG,EAAKC,OAAO,EAAG,GACf,IAAMC,EAAS,CAAC,OAAQ,UAAW,WAAY,WAAY,aAAc,UAAW,oBAAqB,OAAQ,oBACjHF,EAAKG,KAAK,SAAAC,GAAM,IAAD,MAOyC,IAUjD,IAhBDC,EAAW,UAAGD,EAAEJ,KAAK,UAAV,aAAG,EAAWM,QAAQ,iBAAkB,IAEjDC,EAAI,UADVF,EAAW,UAAGA,SAAH,aAAG,EAAaC,QAAQ,iBAAkB,WAC3C,aAAG,EAAaE,MAAM,KAAKC,OAAO,GAAG,GACzCC,EAASN,EAAEJ,KAAKI,EAAEJ,KAAKW,OAAQ,GAChCT,EAAOU,MAAM,SAAAC,GAAC,OAAIA,IAAMT,EAAEJ,KAAK,QAEjB,SAAdI,EAAEJ,KAAK,IAA+B,WAAdI,EAAEJ,KAAK,GAClCH,EAAUiB,KAAK,CACbC,KAAI,UAAEX,EAAEJ,KAAK,UAAT,aAAE,EAAWQ,MAAM,KAAK,GAC5BQ,KAAMZ,EAAEJ,KAAK,GACbiB,OAAM,UAAEb,EAAEJ,KAAK,UAAT,aAAE,EAAWQ,MAAM,KAAK,GAC9BU,YAAab,EACbc,KAAMZ,EACNa,OAAQV,IAIVZ,EAAYgB,KAAK,CACfC,KAAI,UAAEX,EAAEJ,KAAK,UAAT,aAAE,EAAWQ,MAAM,KAAK,GAC5BQ,KAAMZ,EAAEJ,KAAK,GACbiB,OAAM,UAAEb,EAAEJ,KAAK,UAAT,aAAE,EAAWQ,MAAM,KAAK,GAC9BU,YAAab,EACbc,KAAMZ,EACNa,OAAQV,QAId,EAAKW,SAAS,CAAEvB,cAAaD,e,EAG/ByB,cAAgB,SAACC,EAAKC,EAAMC,EAAWC,GACrCC,QAAQC,IAAIL,I,EAGdM,mBAAqB,SAAC7B,GACpB2B,QAAQC,IAAI,+BACZD,QAAQC,IAAI5B,GACZ2B,QAAQC,IAAI,gC,uDAGJ,IAAD,EAC4BE,KAAKlC,MAAhCE,EADD,EACCA,YAAaD,EADd,EACcA,UAErB,OACE,gCACE,qBAAKkC,UAAU,gBAAf,SACE,cAAC,IAAD,CACEC,OAAQF,KAAK/B,aACbkC,QAASH,KAAKR,cACdY,iBAAe,EACfC,kBAAkB,UAClBC,aAAcN,KAAKD,mBALrB,SAOE,8EAGFhC,EAAUc,OAAS,GACnB,sBAAKoB,UAAU,mBAAf,UACE,cAAC,IAAD,CACE/B,KAAOH,EACPwC,SAAU,SACVC,KAAM,OAHR,iCAQA,cAAC,IAAD,CACEtC,KAAOF,EACPuC,SAAU,UACVC,KAAM,OAHR,6C,GA9EqBC,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.544dfccc.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport css from './App.css'\n\nimport { CSVReader, CSVDownloader } from 'react-papaparse'\n\nexport default class App extends Component {\n  state = {\n    stockData: [],\n    optionsData: [],\n  }\n\n  handleOnDrop = (data) => {\n    const optionsData = []\n    const stockData = []\n    data.splice(0, 2)\n    const remove = ['MISC', 'Journal', 'Dividend', 'Transfer', 'Assignment', 'Receipt', 'Option Expiration', 'Fees', 'Corporate Action']\n    data.map( d => {\n      let description = d.data[4]?.replace(/ *\\([^)]*\\) */g, \"\")\n      description = description?.replace(/^[^A-Z]*[^A-Z]/, '')\n      const cost = description?.split(\" \").slice(-1)[0]\n      const amount = d.data[d.data.length -1]\n      if ( remove.find( r => r === d.data[1])) return\n\n      if ( d.data[1] === 'Sold' || d.data[1] === 'Bought' ) {\n        stockData.push({\n          Date: d.data[0]?.split(\" \")[0],\n          Type: d.data[1],\n          Shares: d.data[4]?.split(\" \")[0],\n          Description: description,\n          Cost: cost,\n          Amount: amount,\n        })\n      }\n      else {\n        optionsData.push({\n          Date: d.data[0]?.split(\" \")[0],\n          Type: d.data[1],\n          Shares: d.data[4]?.split(\" \")[0],\n          Description: description,\n          Cost: cost,\n          Amount: amount,\n        })\n      }\n    })\n    this.setState({ optionsData, stockData })\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  render() {\n    const { optionsData, stockData } = this.state\n\n    return (\n      <div>\n        <div className=\"file-uploader\">\n          <CSVReader\n            onDrop={this.handleOnDrop}\n            onError={this.handleOnError}\n            addRemoveButton\n            removeButtonColor='#659cef'\n            onRemoveFile={this.handleOnRemoveFile}\n          >\n            <span>Drop CSV file here or click to upload.</span>\n          </CSVReader>\n        </div>\n        { stockData.length > 0 &&\n          <div className=\"download-buttons\">\n            <CSVDownloader\n              data={ stockData }\n              filename={'Stocks'}\n              type={'link'}\n            >\n              Download Stock Data\n            </CSVDownloader>\n\n            <CSVDownloader\n              data={ optionsData }\n              filename={'Options'}\n              type={'link'}\n            >\n              Download Options Data\n            </CSVDownloader>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}